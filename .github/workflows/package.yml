name: Blank Canvas UI Package
on:
  push:
    tags:
      - 'package.*.*.*'

jobs:
  build:
    name: Blank Canvas UI Package Build
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Get semantic version
        id: tempver
        run: echo "::set-output name=version::${GITHUB_REF#refs/tags/package.}"

      - uses: actions/checkout@v4
        with:
          ref: package.${{steps.tempver.outputs.version}}

      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'

      - name: Config Git user
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Ensure access
        run: yarn npm whoami --scope lunasoft-org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update package version
        run: npm version ${{ steps.tempver.outputs.version }} --no-git-tag-version

      - name: Commit updated package version
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: Update package version'
          branch: main

      - name: Update Git tag
        run: |
          git tag ${{ github.ref_name }} -f
          git push origin ${{ github.ref_name }} -f

      - name: Yarn install
        run: |
          yarn config
          yarn
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Yarn build
        run: yarn build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Yarn publish
        run: yarn npm publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
